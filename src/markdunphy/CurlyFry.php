<?php namespace markdunphy\CurlyFry;

class CurlyFry {

	/**
	 * The URL to access
	 *
	 * @var string
	 */
	private $url;

	/**
	 * The data to send with the request
	 *
	 * @var array Associative array
	 */
	private $data;

	/**
	 * The info for the last request that was sent.
	 *
	 * @var object Contains properties 'response' and 'details'
	 */
	private $request;

	/**
	 * A default set of cURL options
	 *
	 * @var array
	 */
	private $options;

	/**
	 * Constructor method
	 *
	 * @param string $url The URL to access
	 * @param array $data Associative array of data to send with the request
	 */
	public function __construct( $url = NULL, $data = array() )
	{
		$this->url     = $url;
		$this->data    = $data;

		// Set up request object
		$this->request->response = NULL;
		$this->request->details  = NULL;
		$this->request->error    = NULL;
	}

	/**
	 * Provide an option to call the class statically
	 *
	 * @param string $url The URL to access
	 * @param array $data Associative array of data to send with the request
	 * @return markdunphy\CurlyFries
	 */
	public static function create( $url, $data = array() )
	{
		return new static( $url, $data );
	}

	/**
	 * Execute the cURL request and return the response.
	 *
	 * @return mixed
	 */
	public function get()
	{
		$ch = $this->handler();  // Retrieve a curl handler with options set.

		$this->request->response = curl_exec( $ch );
		$this->request->details  = curl_getinfo( $ch );
		$this->request->error    = curl_error( $ch );

		curl_close( $ch );

		return $this->request->response;
	}

	/**
	 * Set custom options
	 *
	 * @param array $options
	 * @return markdunphy\CurlyFries
	 */
	public function setOptions( $options = array() )
	{
		// Set defaults
		$this->options = array(
			CURLOPT_URL  	   	   => $this->url,
			CURLOPT_POST 	   	   => count( $this->data ),
			CURLOPT_POSTFIELDS 	   => http_build_query( $this->data ),
			CURLOPT_RETURNTRANSFER => TRUE
		);

		// Merge in custom options
		$this->options = array_merge( $this->options, $options );

		return $this;
	}

	/**
	 * Set URL class property
	 *
	 * @param url $string
	 * @return markdunphy\CurlyFries
	 */
	public function setURL( $url )
	{
		$this->url = $url;

		return $this;
	}

	/**
	 * Set data class property
	 *
	 * @param array $data
	 * @return markdunphy\CurlyFries
	 */
	public function setData( $data = array() )
	{
		$this->data = $data;

		return $this;
	}

	/**
	 * Debug method.
	 *
	 * @return array Response from curl_getinfo
	 */
	public function debug()
	{
		return $this->request->details;
	}

	/**
	 * Getter method for the last error generated by cURL
	 *
	 * @return string
	 */
	public function error()
	{
		return $this->request->error;
	}

	/**
	 * Get a cURL handler resource
	 *
	 * @return resource
	 */
	private function handler()
	{
		$ch = curl_init();
		curl_setopt_array( $ch, $this->options );

		return $ch;
	}

}